% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evalMetrics.R
\name{barErrorPlot}
\alias{barErrorPlot}
\title{Generate bar error plots}
\usage{
barErrorPlot(
  object,
  error = "MSE",
  by = "CellType",
  dispersion = "se",
  filter.sc = TRUE,
  title = NULL,
  angle = NULL,
  theme = NULL
)
}
\arguments{
\item{object}{\code{DigitalDLSorter} object with \code{trained.model} slot
containing metrics in \code{test.deconv.metrics} slot.}

\item{error}{\code{'MAE'} or \code{'MSE'}.}

\item{by}{Variable used to display errors. Available options are:
\code{'nCellTypes'}, \code{'CellType'}.}

\item{dispersion}{Standard error (\code{'se'}) or standard deviation
(\code{'sd'}). The former is the default.}

\item{filter.sc}{Boolean indicating whether single-cell profiles are filtered
out and only correlation of results associated with bulk samples are
displayed (\code{TRUE} by default).}

\item{title}{Title of the plot.}

\item{angle}{Angle of ticks.}

\item{theme}{\pkg{ggplot2} theme.}
}
\description{
Generate bar error plots by cell type (\code{CellType}) or by number of
different cell types (\code{nCellTypes}) on test pseudo-bulk samples.
}
\examples{
if (requireNamespace("digitalDLSorteRdata", quietly = TRUE)) {
  library(digitalDLSorteRdata)
  data(DDLSLi.list)
  DDLSLi <- listToDDLS(DDLSLi.list)
  DDLSLi <- calculateEvalMetrics(
    object = DDLSLi
  )
  barErrorPlot(
    object = DDLSLi,
    error = "MSE",
    by = "CellType"
  )

  barErrorPlot(
    object = DDLSLi,
    error = "MAE",
    by = "nCellTypes"
  )
}
}
\seealso{
\code{\link{calculateEvalMetrics}} \code{\link{corrExpPredPlot}}
\code{\link{distErrorPlot}} \code{\link{blandAltmanLehPlot}}
}
