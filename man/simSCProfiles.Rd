% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simSingleCell.R
\name{simSCProfiles}
\alias{simSCProfiles}
\title{Simulate new single-cell expression profiles using ZINB-WaVE model parameters}
\usage{
simSCProfiles(
  object,
  cell.ID.column,
  cell.type.column,
  n.cells,
  suffix.names = "_Simul",
  cell.types = NULL,
  file.backend = NULL,
  name.dataset.backend = NULL,
  compression.level = NULL,
  block.processing = FALSE,
  block.size = 1000,
  chunk.dims = NULL,
  verbose = TRUE
)
}
\arguments{
\item{object}{\code{\linkS4class{DigitalDLSorter}} object with
\code{single.cell.real} and \code{zinb.params} slots.}

\item{cell.ID.column}{Name or column number corresponding to cell names of
expression matrix in cells metadata.}

\item{cell.type.column}{Name or column number corresponding to the cell type
of each cell in cells metadata.}

\item{n.cells}{Number of simulated cells generated by cell type (i.e. if you
have 10 different cell types in your dataset, if \code{n.cells = 100}, then
1000 cell profiles will be simulated).}

\item{suffix.names}{Suffix used in simulated cells. This suffix must be
unique in simulated cells, so ensure that this suffix does not appear in
real cell names.}

\item{cell.types}{Vector indicating which cell types you want to simulate. If
\code{NULL} (by default), \code{n.cells} single-cell profiles for all cell
types will be simulated.}

\item{file.backend}{Valid file path to store simulated single-cell expression
profiles as HDF5 file (\code{NULL} by default). If provided, data is stored
in HDF5 files as back-end by using \pkg{DelayedArray}, \pkg{HDF5Array} and
\pkg{rhdf5} packages instead of loading in RAM memory. This is suitable for
situations where you have a large amount of data that cannot be allocated
in memory. Note that operations on this data will be carried out by blocks
(i.e subsets of determined size) which can lead to longer execution times.}

\item{name.dataset.backend}{Name of dataset in HDF5 file that will be used.
Note that it cannot exist. If \code{NULL} (by default), a random dataset
name will be used.}

\item{compression.level}{The compression level used if \code{file.backend} is
provided. It is an integer value between 0 (no compression) and 9 (highest
and slowest compression). See
\code{?\link[HDF5Array]{getHDF5DumpCompressionLevel}} from \pkg{HDF5Array}
package for more information.}

\item{block.processing}{Boolean indicating if data should be simulated by
blocks (only if \code{file.backend} is used, \code{FALSE} by default). This
functionality is suitable for cases where is not possible to allocate data
in memory and it leads to longer execution times.}

\item{block.size}{Number of single-cell expression profiles that will be
simulated in each iteration during the process. Higher numbers resulting in
more memory usage but lesser execution times. Set according to available
computational resources (1000 by default). Note that it cannot be greater
than the total number of simulated cells.}

\item{chunk.dims}{Specifies the dimensions that HDF5 chunk will have. If
\code{NULL}, the default value is a vector of two items: the number of
genes considered by ZINB-WaVE model during the simulation and only one
sample in order to increase the read times in the following steps. Greater
number of columns written in each chunk can lead to longer read times in
subsequent steps. Note that it cannot be  greater than dimensions of
simulated matrix.}

\item{verbose}{Show informative messages during the execution (\code{TRUE} by
default).}
}
\value{
A \code{\linkS4class{DigitalDLSorter}} object with
\code{single.cell.simul} slot containing a
\code{\linkS4class{SingleCellExperiment}} object with the simulated
single-cell expression profiles.
}
\description{
Simulate single-cell expression profiles by randomly sampling from a negative
binomial distribution and inserting dropouts by sampling from a binomial
distribution using ZINB -WaVE parameters estimated by
\code{\link{estimateZinbwaveParams}} function.
}
\details{
Before this step, see \code{?\link{estimateZinbwaveParams}}. As described in
Torroja and Sanchez-Cabo, 2019, this function simulates a determined number
of transcriptional profiles for each cell type provided by randomly sampling
from a negative binomial distribution with \eqn{\mu} and \eqn{\theta}
estimated parameters and inserting dropouts by sampling from a binomial
distribution with pi probability. All parameters are estimated from
single-cell real data using \code{\link{estimateZinbwaveParams}} function. It
uses the ZINB-WaVE model (Risso et al., 2018). For more details about the
model, see \code{?\link{estimateZinbwaveParams}} and Risso et al., 2018.

\code{file.backend} argument allows to create a HDF5 file with simulated
single-cell profiles that will be used as back-end in order to work with data
allocated on disk instead of RAM memory. If you use \code{file.backend}
argument with \code{block.processing = FALSE}, all single-cell profiles will
be simulated in one step and, therefore, allocated in RAM memory. Then, data
will be written in HDF5 file. In order to avoid collapsing RAM memory if so
many single-cell profiles are simulated, single-cell profiles can be
simulated and written in HDF5 files by blocks of \code{block.size} size by
setting \code{block.processing = TRUE}.
}
\examples{
DDLSChung <- simSCProfiles(
  object = DDLSChung,
  cell.ID.column = "Cell_ID",
  cell.type.column = "Cell_type",
  n.cells = 10,
  verbose = TRUE
)

}
\references{
Risso, D., Perraudeau, F., Gribkova, S. et al. (2018). A general
and flexible method for signal extraction from single-cell RNA-seq data.
Nat Commun 9, 284. doi:
\href{https://doi.org/10.1038/s41467-017-02554-5}{10.1038/s41467-017-02554-5}
Torroja, C. and SÃ¡nchez-Cabo, F. (2019). digitalDLSorter: A Deep Learning
algorithm to quantify immune cell populations based on scRNA-Seq data.
Frontiers in Genetics 10, 978. doi:
\href{https://doi.org/10.3389/fgene.2019.00978}{10.3389/fgene.2019.00978}
}
\seealso{
\code{\link{estimateZinbwaveParams}}
}
