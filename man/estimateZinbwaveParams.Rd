% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simSingleCell.R
\name{estimateZinbwaveParams}
\alias{estimateZinbwaveParams}
\title{Estimate parameters of ZINB-WaVE model for simulating new single-cell
expression profiles}
\usage{
estimateZinbwaveParams(
  object,
  cell.type.column,
  cell.ID.column,
  gene.ID.column,
  cell.cov.columns,
  gene.cov.columns,
  subset.cells = NULL,
  proportional = TRUE,
  set.type = "All",
  threads = 1,
  verbose = TRUE
)
}
\arguments{
\item{object}{\code{\linkS4class{DigitalDLSorter}} object with a
\code{single.cell.real} slot.}

\item{cell.type.column}{Name or column number corresponding to cell type of
each cell in cells metadata.}

\item{cell.ID.column}{Name or column number corresponding to cell names of
expression matrix in cells metadata.}

\item{gene.ID.column}{Name or column number corresponding to notation used
for features/genes in genes metadata.}

\item{cell.cov.columns}{Name or column number(s) in cells metadata that will
be used as covariates during the fitting of the model (if no covariates are
used, set it empty or \code{NULL}).}

\item{gene.cov.columns}{Name or column number(s) in genes metadata that will
be used as covariates during the fitting of the model (if no covariates are
used, set it empty or \code{NULL}).}

\item{subset.cells}{Number of cells to fit ZINB-WaVE model. It is useful
when original data sets are too large to fit the model. Set a value
according to original data set and available resources in your computer. If
\code{NULL} (by default), all cells will be used. It must be an integer
greater than or equal to the number of cell types considered and less
than or equal to the total cells.}

\item{proportional}{If \code{TRUE}, original cell type proportions in the
subset of cells generated by \code{subset.cells} argument will not be
altered as far as possible. If \code{FALSE}, all cell types will have the
same number of cells as far as possible (\code{TRUE} by default).}

\item{set.type}{Cell type(s) to evaluate (\code{'All'} by default). We
recommend fitting the model to all cell types instead of just using a
subset of them in order to capture the total variability present in the
original experiment even though only a subset of cell types is simulated.}

\item{threads}{Number of threads used for the estimation (1 by default). For
setting the parallel environment, \pkg{BiocParallel} package is used.}

\item{verbose}{Show informative messages during the execution (\code{TRUE} by
default).}
}
\value{
A \code{\linkS4class{DigitalDLSorter}} object with \code{zinb.params}
slot containing a \code{\linkS4class{ZINBParams}} object. This object
contains the estimated ZINB-WaVE parameters from real single-cell data.
}
\description{
Estimate parameters of ZINB-WaVE model using a real single-cell data set to
simulate new single-cell profiles and to increase the signal of
underrepresented cell types. If this step is needed, its aim is to train the
Deep Neural Network in a more balanced way. After this step,
\code{\link{simSCProfiles}} function will use the estimated parameters to
simulate new single-cell profiles. See \code{?\link{simSCProfiles}} for more
information.
}
\details{
ZINB-WaVE is a flexible model for zero-inflated count data. This function
carries out the model fit to real single-cell data modeling \eqn{Y_{ij}} (the
count of feature \eqn{j} for sample \eqn{i}) as a random variable following a
zero-inflated negative binomial (ZINB) distribution. The estimated parameters
will be used for the simulation of new single-cell expression profiles by
sampling a negative binomial distribution and inserting dropouts from a
binomial distribution. To do it, \pkg{digitalDLSorteR} uses
\code{\link[splatter]{zinbEstimate}} function from \pkg{splatter} package
(Zappia et al., 2017), a wrapper around \code{\link[zinbwave]{zinbFit}}
function from \pkg{zinbwave} package (Risso et al., 2018). For more details
about the model, see Risso et al., 2018.
}
\examples{
\dontrun{
if (requireNamespace("digitalDLSorteRdata", quietly = TRUE)) {
  library(digitalDLSorteRdata)
  data(DDLSChung)
  DDLSChung <- estimateZinbwaveParams(
    object = DDLSChung,
    cell.ID.column = "Cell_ID",
    gene.ID.column = "external_gene_name",
    cell.type.column = "Cell_type",
    cell.cov.columns = c("Patient", "Sample_type"),
    gene.cov.columns = "gene_length",
    verbose = TRUE
  )
}
}

}
\references{
Risso, D., Perraudeau, F., Gribkova, S. et al. (2018). A general
and flexible method for signal extraction from single-cell RNA-seq data.
Nat Commun 9, 284. doi:
\doi{10.1038/s41467-017-02554-5}
Torroja, C. and SÃ¡nchez-Cabo, F. (2019). digitalDLSorter: A Deep Learning
algorithm to quantify immune cell populations based on scRNA-Seq data.
Frontiers in Genetics 10, 978. doi:
\doi{10.3389/fgene.2019.00978}
Zappia, L., Phipson, B. and Oshlack, A. Splatter: simulation of single-cell
RNA sequencing data. Genome Biol. 2017; 18: 174. doi:
\doi{10.1186/s13059-017-1305-0}
}
\seealso{
\code{\link{simSCProfiles}}
}
